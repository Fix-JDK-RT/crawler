Bootstrap — свободный набор инструментов для создания сайтов и веб-приложений. Включает в себя HTML- и CSS-шаблоны оформления для типографики, веб-форм, кнопок, меток, блоков навигации и прочих компонентов веб-интерфейса, включая JavaScript-расширения.Цель этого руководства — показать, как настроить систему для правильного использования JS- и CSS-компонентов Bootstrap.Прим. перев. В статье не рассматривается целесообразность использования или не использования данного фреймворка. Как и любое другое решение, Bootstrap обладает своими преимуществами и недостатками.Официальный сайт предлагает несколько способов подключения фреймворка к своему проекту:Стоит отметить, что Bootstrap предоставляет три готовых к использованию файла и может быть использован для:При этом для использования двух последних опций нет необходимости включать в проект весь фреймворк целиком. Для этого есть отдельные файлы.Предполагается, что вы знакомы с Sass и каким-либо сборщиком. Кроме того, вам потребуется npm.Смотрите также: Развёрнутое руководство по Sass/SCSSСначала нужно добавить в проект необходимые зависимости:Типовая структура проекта выглядит так:Стоит пояснить, какие преимущества предоставляет такая структура. Сначала рассмотрим папку styles, а затем перейдём к scripts.Эта папка содержит две вложенные директории app и vendor, а также два файла с теми же именами.Необходимо подключить Bootstrap и код нашего приложения в файле app.scss. Это делается следующим образом:Теперь обратите внимание на папку styles/app. Там всего два файла:В vendor.scss импортируются зависимости. Сейчас единственная наша зависимость — Bootstrap, поэтому этот файл содержит только одну строку.Рассмотрим файлы в папке styles/vendor/bootstrap.В Webpack (автор использует этот сборщик) знак тильды (~) указывает, что файлы нужно искать в папке node_modules. Если вы используете, например, Grunt, то нужно установить grunt-sass-tilde-importer.  Если какие-то из представленных компонентов не использованы в проекте, ни в коем случае не надо удалять сами файлы, нужно лишь закомментировать их импорт.В каждой переменной Bootstrap установлен флаг !default. Таким образом, если проект содержит заранее определённые переменные, то они будут использованы вместо дефолтных.Чтобы сделать скрипты модульными, нужно включить в проект только необходимые компоненты. Однако в Bootstrap это не такая простая задача. Подробно этот процесс описан в документации к фреймворку.Начать следует с файла scripts/vendor.js, который просто импортирует файлы из папки vendor:Смотрите также: Как отказаться от jQuery в современном фронтендеНеобходимо инициализировать jQuery в объекте window, в противном случае Bootstrap не сможет скомпилироваться. Кроме того, это всё равно придётся сделать, если вы планируете использовать jQuery в приложении. Импорт jQuery в файле scripts/vendor/jquery.js:Как и в файле vendor, придётся импортировать каждый модуль отдельно. Вы также можете закомментировать неиспользуемые компоненты, чтобы исключить их из проекта. Содержимое файла scripts/vendor/jquery.js:Следует отметить, что модуль Util используется везде, кроме компонентов Button и Popover.Таким образом, скомпилировав Bootstrap в отдельный файл, можно применять функции и переменные ядра фреймворка в любом месте в проекте. Кроме того, благодаря реализации модульного принципа, ненужные компоненты легко отключить.Миксины Bootstrap можно использовать в приложении глобально:Можно использовать дефолтные значения переменных и переопределять их:Можно создавать экземпляры любых компонентов Bootstrap в файле scripts/app.js:Чтобы лучше разобраться, вы можете изучить полностью настроенный и функционирующий проект Webpack v4 Configuration, в котором реализована описанная логика. Это хороший пример того, как можно настроить Bootstrap под себя.Также рекомендуем обратить внимание на видеокурс «Bootstrap для начинающих».Перевод статьи Bootstrap Framework — Best PracticesСергей ШтукатуровЗагрузка...Только самые важные IT-новостиВы успешно подтвердили свою подписку на «Аргументы и функции».Ждите первое письмо, оно придёт уже совсем скоро!«Аргументы и функции» — обзор самого важного из мира разработки. Даже не нужно переходить по ссылкам, просто прочитать одно письмо. Присылаем каждый день, по вечерам.Выглядит это примерно так: